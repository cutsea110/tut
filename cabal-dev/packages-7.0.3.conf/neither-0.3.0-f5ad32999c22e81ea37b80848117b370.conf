name: neither
version: 0.3.0
id: neither-0.3.0-f5ad32999c22e81ea37b80848117b370
license: BSD3
copyright:
maintainer: Michael Snoyman <michael@snoyman.com>
stability: Stable
homepage: http://github.com/snoyberg/neither
package-url:
description: The standard Either datatype suffers from a lack of monad and applicative instances. To make matters worse, the mtl and transformers packages provide orphan instances which conflict with each other, as well as defining a transformer version which has an usually unnecessary superclass constraint.
             .
             Besides these annoyances, there is another issue: there exist two reasonable definitions of the Applicative instance for Either: one the holds onto only the first Left value, or one that appends all Left values together via a Monoid instance. The former is compatible with the monad instance, while the latter is not.
             .
             This package defines three datatypes, some helpers functions and instances. The data types are AEither, MEither and MEitherT. AEither provides an Applicative instance which appends Left values, MEither provides the monadic definition, and MEitherT is a monad transformer.
category: Data
author: Michael Snoyman <michael@snoyman.com>
exposed: True
exposed-modules: Data.Neither
hidden-modules:
import-dirs: /home/cutsea110/devel/yesod/tut/cabal-dev//lib/neither-0.3.0/ghc-7.0.3
library-dirs: /home/cutsea110/devel/yesod/tut/cabal-dev//lib/neither-0.3.0/ghc-7.0.3
hs-libraries: HSneither-0.3.0
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.3.1.0-1554f26e1cc1c87f47464e927dddbd20
         failure-0.1.0.1-3019bd36bda778259652dbe2965fc6d0
         transformers-0.2.2.0-7341f4d82874561a0431f4b264319cf8
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/cutsea110/devel/yesod/tut/cabal-dev//share/doc/neither-0.3.0/html/neither.haddock
haddock-html: /home/cutsea110/devel/yesod/tut/cabal-dev//share/doc/neither-0.3.0/html
